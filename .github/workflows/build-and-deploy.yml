name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache: false
    
    - name: Run tests
      run: |
        go mod download
        go test ./internal/... ./cmd/... -v
    
    - name: Build and push binary
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        GH_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
      run: |
        VERSION=$(date +"%Y%m%d%H%M")
        
        go mod download
        
        # Build for Linux
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags="-s -w" -trimpath -o go-proxy-${VERSION}-linux ./cmd
        
        # Build for macOS Intel
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a -installsuffix cgo -ldflags="-s -w" -trimpath -o go-proxy-${VERSION}-darwin-amd64 ./cmd
        
        # Build for macOS Apple Silicon
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -a -installsuffix cgo -ldflags="-s -w" -trimpath -o go-proxy-${VERSION}-darwin-arm64 ./cmd
        
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

        git clone https://x-access-token:${GH_TOKEN}@github.com/flitware-oss/go-proxy-releases.git
        cd go-proxy-releases

        cp ../go-proxy-${VERSION}-linux .
        cp ../go-proxy-${VERSION}-darwin-amd64 .
        cp ../go-proxy-${VERSION}-darwin-arm64 .
        
        git add go-proxy-${VERSION}-linux go-proxy-${VERSION}-darwin-amd64 go-proxy-${VERSION}-darwin-arm64
        git commit -m "Add go-proxy v${VERSION}"
        git push